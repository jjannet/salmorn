// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SalmornSRV.Service;
using System;

namespace SalmornSRV.Service.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20171122153945_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SalmornSRV.Models.Account.Role", b =>
                {
                    b.Property<string>("role")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("roleName");

                    b.HasKey("role");

                    b.ToTable("S_Role");
                });

            modelBuilder.Entity("SalmornSRV.Models.Account.RoleMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("role")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("userId");

                    b.HasKey("Id");

                    b.ToTable("S_RoleMapping");
                });

            modelBuilder.Entity("SalmornSRV.Models.Account.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("createBy");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime");

                    b.Property<string>("displayName")
                        .HasMaxLength(255);

                    b.Property<string>("email")
                        .HasMaxLength(255);

                    b.Property<bool?>("isActive");

                    b.Property<string>("password")
                        .HasMaxLength(255);

                    b.Property<int?>("updateBy");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime");

                    b.HasKey("userId");

                    b.ToTable("S_User");
                });

            modelBuilder.Entity("SalmornSRV.Models.Log.FileUpload", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("fileName");

                    b.Property<string>("ipAddress");

                    b.Property<string>("macAddress");

                    b.Property<string>("type");

                    b.Property<DateTime>("uploadDate");

                    b.Property<int?>("userId");

                    b.HasKey("id");

                    b.ToTable("L_FileUpload");
                });

            modelBuilder.Entity("SalmornSRV.Models.Shop.Order_D", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Order_Hid");

                    b.Property<int>("hId");

                    b.Property<int>("productId");

                    b.Property<int>("qty");

                    b.Property<decimal>("unitPrice");

                    b.HasKey("id");

                    b.HasIndex("Order_Hid");

                    b.ToTable("T_Order_D");
                });

            modelBuilder.Entity("SalmornSRV.Models.Shop.Order_H", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address");

                    b.Property<string>("code")
                        .HasMaxLength(50);

                    b.Property<int?>("createBy");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime");

                    b.Property<string>("email")
                        .HasMaxLength(250);

                    b.Property<string>("firstName")
                        .HasMaxLength(150);

                    b.Property<bool>("isPay");

                    b.Property<bool>("isShipping");

                    b.Property<string>("lastName")
                        .HasMaxLength(150);

                    b.Property<DateTime>("orderDate");

                    b.Property<DateTime?>("payDate");

                    b.Property<string>("province")
                        .HasMaxLength(250);

                    b.Property<decimal>("shippingPrice");

                    b.Property<string>("tel")
                        .HasMaxLength(50);

                    b.Property<decimal>("totalPrice");

                    b.Property<decimal>("totalProductPrice");

                    b.Property<int?>("updateBy");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("zipCode")
                        .HasMaxLength(5);

                    b.HasKey("id");

                    b.ToTable("T_Order_H");
                });

            modelBuilder.Entity("SalmornSRV.Models.Shop.PaymentNotification", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("fileUpload")
                        .HasMaxLength(500);

                    b.Property<string>("firstName")
                        .HasMaxLength(150);

                    b.Property<string>("lastName")
                        .HasMaxLength(150);

                    b.Property<string>("orderCode")
                        .HasMaxLength(150);

                    b.Property<DateTime>("paymentDate");

                    b.Property<string>("paymentType")
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("T_PaymentNotification");
                });

            modelBuilder.Entity("SalmornSRV.Models.Shop.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("code")
                        .HasMaxLength(10);

                    b.Property<decimal?>("cost");

                    b.Property<int?>("createBy");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime");

                    b.Property<string>("detail");

                    b.Property<bool>("isActive");

                    b.Property<bool?>("isPreOrder");

                    b.Property<bool>("isUseStock");

                    b.Property<string>("name")
                        .HasMaxLength(250);

                    b.Property<string>("note");

                    b.Property<DateTime?>("preEnd");

                    b.Property<DateTime?>("preStart");

                    b.Property<decimal?>("price");

                    b.Property<int>("qtyShippingPriceCeiling");

                    b.Property<decimal>("shippintPriceRate");

                    b.Property<string>("unitName")
                        .HasMaxLength(50);

                    b.Property<int?>("updateBy");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("weight");

                    b.HasKey("id");

                    b.ToTable("M_Product");
                });

            modelBuilder.Entity("SalmornSRV.Models.Shop.ProductImage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("fileId");

                    b.Property<int>("productId");

                    b.HasKey("id");

                    b.ToTable("M_Product_Image");
                });

            modelBuilder.Entity("SalmornSRV.Models.Shop.ProductStock", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("date");

                    b.Property<int>("productId");

                    b.Property<int>("qty");

                    b.HasKey("id");

                    b.ToTable("ProductStocks");
                });

            modelBuilder.Entity("SalmornSRV.Models.Shop.Order_D", b =>
                {
                    b.HasOne("SalmornSRV.Models.Shop.Order_H")
                        .WithMany("Order_Ds")
                        .HasForeignKey("Order_Hid");
                });
#pragma warning restore 612, 618
        }
    }
}
